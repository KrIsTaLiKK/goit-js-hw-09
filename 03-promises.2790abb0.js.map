{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAEpCF,EAAKG,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAIC,iBACJ,IAAgCC,EAAAF,EAAIG,cAA5BC,EAAwBF,EAAxBE,MAAOC,EAAiBH,EAAjBG,KAAMC,EAAWJ,EAAXI,QAavB,SAA6BC,GAC3B,IAAMC,EAA0DD,EAA1DC,WAAYC,EAA8CF,EAA9CE,UAAWC,EAAmCH,EAAnCG,YAAaC,EAAsBJ,EAAtBI,kBAE1CC,aAAY,WACNF,EAAcC,IAuBtB,SAAuBE,EAAUT,GAC/B,IAAMU,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEL,WAAUT,UAEpBe,EAAO,CAAEN,WAAUT,S,GAEpBA,E,IA7BHiB,CAAcV,EAAmBH,GAC9Bc,MAAK,SAAAC,G,IAAGV,EAAQU,EAARV,SAAUT,EAAKmB,EAALnB,MACjBV,EAAA8B,OAAOC,QAAQ,uBAAwCC,OAAfb,EAAS,QAAYa,OAANtB,EAAM,MAAK,CAC9DuB,QAAO,K,IAIZC,OAAM,SAAAL,G,IAAGV,EAAQU,EAARV,SAAUT,EAAKmB,EAALnB,MAClBV,EAAA8B,OAAOK,QAAQ,sBAAuCH,OAAfb,EAAS,QAAYa,OAANtB,EAAM,MAAK,CAC7DuB,QAAO,K,IAKfhB,GAAqB,EACrBH,GAAcC,E,GACbD,E,EA5BHsB,CAPiB,CACftB,WAAYuB,OAAO3B,EAAM4B,OACzBvB,UAAWsB,OAAO1B,EAAK2B,OACvBtB,YAAaqB,OAAOzB,EAAO0B,OAC3BrB,kBAAmB,IAIrBf,EAAKqC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n  const { delay, step, amount } = evt.currentTarget;\n\n  const formData = {\n    inputDelay: Number(delay.value),\n    inputStep: Number(step.value),\n    inputAmount: Number(amount.value),\n    positionOfPromise: 1,\n  };\n\n  getAmountOfPromises(formData);\n  form.reset();\n}\n\nfunction getAmountOfPromises(formData) {\n  let { inputDelay, inputStep, inputAmount, positionOfPromise } = formData;\n\n  setInterval(() => {\n    if (inputAmount < positionOfPromise) {\n      return;\n    }\n\n    createPromise(positionOfPromise, inputDelay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, {\n          timeout: 2000,\n        });\n        // console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, {\n          timeout: 2000,\n        });\n        // console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    positionOfPromise += 1;\n    inputDelay += inputStep;\n  }, inputDelay);\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","addEventListener","evt","preventDefault","_currentTarget","currentTarget","delay","step","amount","formData","inputDelay","inputStep","inputAmount","positionOfPromise","setInterval","position","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$ce04d3a99e08e73b$var$createPromise","then","param","Notify","success","concat","timeout","catch","failure","$ce04d3a99e08e73b$var$getAmountOfPromises","Number","value","reset"],"version":3,"file":"03-promises.2790abb0.js.map"}