{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAEpCF,EAAKG,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAIC,iBACJ,MAAMC,MAAEA,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAIK,eAatC,SAA6BC,GAC3B,IAAIC,WAAEA,EAAUC,UAAEA,EAASC,YAAEA,EAAWC,kBAAEA,GAAsBJ,EAEhEK,aAAY,KACNF,EAAcC,IAuBtB,SAAuBE,EAAUV,GAC/B,MAAMW,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEL,E,MAAUV,IAEpBgB,EAAO,C,SAAEN,E,MAAUV,GAAQ,GAE5BA,EAAM,G,CA7BTkB,CAAcV,EAAmBH,GAC9Bc,MAAK,EAACT,SAAEA,EAAQV,MAAEA,MACjBR,EAAA4B,OAAOC,QAAQ,uBAAqBX,QAAiBV,MAAW,CAC5DsB,QAAO,KACT,IAGHC,OAAM,EAACb,SAAEA,EAAQV,MAAEA,MAClBR,EAAA4B,OAAOI,QAAQ,sBAAoBd,QAAiBV,MAAW,CAC3DsB,QAAO,KACT,IAINd,GAAqB,EACrBH,GAAcC,EAAS,GACtBD,E,EA5BHoB,CAPiB,CACfpB,WAAYqB,OAAO1B,EAAM2B,OACzBrB,UAAWoB,OAAOzB,EAAK0B,OACvBpB,YAAamB,OAAOxB,EAAOyB,OAC3BnB,kBAAmB,IAIrBd,EAAKkC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n  const { delay, step, amount } = evt.currentTarget;\n\n  const formData = {\n    inputDelay: Number(delay.value),\n    inputStep: Number(step.value),\n    inputAmount: Number(amount.value),\n    positionOfPromise: 1,\n  };\n\n  getAmountOfPromises(formData);\n  form.reset();\n}\n\nfunction getAmountOfPromises(formData) {\n  let { inputDelay, inputStep, inputAmount, positionOfPromise } = formData;\n\n  setInterval(() => {\n    if (inputAmount < positionOfPromise) {\n      return;\n    }\n\n    createPromise(positionOfPromise, inputDelay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, {\n          timeout: 2000,\n        });\n        // console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, {\n          timeout: 2000,\n        });\n        // console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    positionOfPromise += 1;\n    inputDelay += inputStep;\n  }, inputDelay);\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","addEventListener","evt","preventDefault","delay","step","amount","currentTarget","formData","inputDelay","inputStep","inputAmount","positionOfPromise","setInterval","position","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$47d4ff9957288465$var$createPromise","then","Notify","success","timeout","catch","failure","$47d4ff9957288465$var$getAmountOfPromises","Number","value","reset"],"version":3,"file":"03-promises.4c315bef.js.map"}